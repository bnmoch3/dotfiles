# Purification by Matthieu Cneude: https://github.com/Phantas0s/purification
# Based on: Purity by Kevin Lanni: https://github.com/therealklanni/purity
# MIT License

# prompt:
# %F => color dict
# %f => reset color
# %~ => current path
# %* => time
# %n => username
# %m => shortname host
# %(?..) => prompt conditional - %(condition.true.false)

# display git status
# git prompt parser
# show green asterisk if repo is dirty (uncommitted changes)
_git_status_summary() {
  local output
  output=$(git status --porcelain 2>/dev/null)
  [[ -n "$output" ]] && echo "%F{green}*%f"
}

# get current git branch (symbolic-ref)
_git_branch() {
  git symbolic-ref --quiet --short HEAD 2>/dev/null
}

# get Git repo name
_git_repo_name() {
  local git_root
  git_root=$(git rev-parse --show-toplevel 2>/dev/null) || return
  echo "${git_root##*/}"
}

# compose full right prompt: ( repo) λ:branch *
prompt_git_info() {
  local repo branch status parts=()

  repo=$(_git_repo_name)
  branch=$(_git_branch)
  git_status=$(_git_status_summary)

  [[ -n "$repo" ]] && parts+=("%F{blue}( $repo)%f")
  [[ -n "$branch" ]] && parts+=("%F{green}λ:%f%F{blue}$branch%f")
  [[ -n "$git_status" ]] && parts+=("$git_status")

  [[ ${#parts[@]} -gt 0 ]] && echo "${(j: :)parts}"
}

# optional: precmd (before each prompt)
# prompt_purity_precmd() {
#   print -P ''
# }

# setup everything
prompt_purification_setup() {
  autoload -Uz add-zsh-hook
  # add-zsh-hook precmd prompt_purity_precmd

  setopt prompt_subst

  PROMPT='%F{blue}${PWD##*/} >%f '
  RPROMPT='$(prompt_git_info)'
}

prompt_purification_setup
